{4,
{49,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{110,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСформироватьДоговорИОткрыть",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{111,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСформироватьДоговорИОткрытьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСоздатьДоговор",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСоздатьДоговорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСправкаПоПараметрам",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСправкаПоПараметрамРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{124,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСохранитьОбразецDocШаблона",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{125,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСохранитьОбразецDocШаблонаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Договор",
{1,1,
{"ru","Договор"}
},
{1,1,
{"ru","Договор"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1,
{3,4,
{0}
},0,2,0,3},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{119,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа3",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,1,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Организация",1,0,
{1,0},
{1,0},
{2,
{1},
{0,46e1d41d-7d1c-4214-bf08-275c15611281}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ОрганизацияПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ОрганизацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОрганизацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Контрагент",1,0,
{1,1,
{"ru","Контрагент"}
},
{1,0},
{2,
{1},
{0,7ce94a64-563d-4212-808e-a295b91e37a9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,3,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КонтрагентПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КонтрагентКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтрагентРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{107,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Шаблон",1,0,
{1,1,
{"ru","Шаблон"}
},
{1,0},
{2,
{1},
{0,ca858d67-78fd-4fbc-a39c-332eacf75dd7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ШаблонПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{108,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ШаблонКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ШаблонРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{117,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа2",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,1,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"БанковскийСчет",1,0,
{1,1,
{"ru","Счет"}
},
{1,0},
{2,
{1},
{0,7cb6ebe5-fd26-40cc-8ed8-e5eac7ffcdda}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,1,"Отбор.Владелец",2,
{1},
{0,46e1d41d-7d1c-4214-bf08-275c15611281},0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"БанковскийСчетПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{105,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"БанковскийСчетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{106,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БанковскийСчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДоговорКонтрагента",1,0,
{1,1,
{"ru","Договор"}
},
{1,0},
{2,
{1},
{0,a9ff30a7-2bcb-44c7-a2c2-57c53ac0ba32}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,2,"Отбор.Контрагент",2,
{1},
{0,7ce94a64-563d-4212-808e-a295b91e37a9},0,"Отбор.Организация",2,
{1},
{0,46e1d41d-7d1c-4214-bf08-275c15611281},0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,3,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДоговорКонтрагентаПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДоговорКонтрагентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДоговорКонтрагентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{114,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПапкаДляДоговора",1,0,
{1,1,
{"ru","Папка"}
},
{1,0},
{2,
{1},
{0,66abd103-61ef-4a12-83cb-85b9a1a7f6ce}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,2,
{2}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},1,3,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{115,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПапкаДляДоговораКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{116,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПапкаДляДоговораРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{118,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДоговорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,1,
{0,
{0,
{"B",1},0}
},"ТаблицаПараметровЗамены",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,e469dd4b-0bb2-463f-8ece-bce7839bea11}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,2,13,
{"U"},19,
{"S",""},
{1,60edb81d-887b-478e-94ee-7fef2b13393d,"ТаблицаПараметровЗаменыПриАктивизацииСтроки",1,0,60edb81d-887b-478e-94ee-7fef2b13393d,0,1},
{0},1,
{22,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаПараметровЗаменыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ТаблицаПараметровЗаменыКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаПараметровЗаменыОбновитьЗамены",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{89,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыОбновитьЗаменыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ТаблицаПараметровЗаменыНомерСтроки",1,0,
{1,0},
{1,0},
{3,
{1},
{0,e469dd4b-0bb2-463f-8ece-bce7839bea11},
{-2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,0},0,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0,1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{22,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаПараметровЗаменыНомерСтрокиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыНомерСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаПараметровЗаменыПараметр",1,0,
{1,0},
{1,0},
{3,
{1},
{0,e469dd4b-0bb2-463f-8ece-bce7839bea11},
{0,aeb5a511-8b48-4150-8ead-e4d533f45f8c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаПараметровЗаменыПараметрКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыПараметрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаПараметровЗаменыЗамена",1,0,
{1,0},
{1,0},
{3,
{1},
{0,e469dd4b-0bb2-463f-8ece-bce7839bea11},
{0,110bb5e0-4b29-4753-95a9-aea25bfbf7c5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаПараметровЗаменыЗаменаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыЗаменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаПараметровЗаменыПояснение",1,0,
{1,0},
{1,0},
{3,
{1},
{0,e469dd4b-0bb2-463f-8ece-bce7839bea11},
{0,bbdd4677-16b2-4588-953d-29714d987426}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаПараметровЗаменыПояснениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыПояснениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,1,1,1,
{5,
{91,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{92,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаПараметровЗаменыСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{93,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{14,0},0,3,3,0},1,
{5,
{94,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаПараметровЗаменыСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{95,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаПараметровЗаменыСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{96,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{14,1},0,3,3,0},1,
{5,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаПараметровЗаменыУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаПараметровЗаменыУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаПараметровЗаменыУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{14,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,0,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",2,0,0,0,0,0,3,3,0,0,2,100,1,1,0,0,0,
{49,0}
},"
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивТиповБанковскийСчет		= Новый Массив;
	Если Метаданные.Имя = ""УправлениеТорговлей"" Тогда
		ДобавитьВМассивСправочник(МассивТиповБанковскийСчет, ""БанковскиеСчетаОрганизаций"");
	ИначеЕсли Метаданные.Имя = ""БухгалтерияПредприятия"" Тогда
		ДобавитьВМассивСправочник(МассивТиповБанковскийСчет, ""БанковскиеСчета"");
	КонецЕсли;
	Элементы.БанковскийСчет.ОграничениеТипа = Новый ОписаниеТипов(МассивТиповБанковскийСчет,,,,);
	
	Попытка
		Элементы.Организация.ПодсказкаВвода = НСтр(""ru = 'Наша организация'"");
		Элементы.Организация.АвтоМаксимальнаяШирина = Ложь;
		Элементы.Контрагент.ПодсказкаВвода = НСтр(""ru = 'С кем заключаем договор'"");
		Элементы.Контрагент.АвтоМаксимальнаяШирина = Ложь;
		Элементы.Шаблон.ПодсказкаВвода = НСтр(""ru = 'Шаблон договора'"");
		Элементы.Шаблон.АвтоМаксимальнаяШирина = Ложь;
		Элементы.БанковскийСчет.ПодсказкаВвода = НСтр(""ru = 'Наши банковские реквизиты'"");
		Элементы.БанковскийСчет.АвтоМаксимальнаяШирина = Ложь;
		Элементы.ДоговорКонтрагента.ПодсказкаВвода = НСтр(""ru = 'Реквизиты договора'"");
		Элементы.ДоговорКонтрагента.АвтоМаксимальнаяШирина = Ложь;
		Элементы.ПапкаДляДоговора.ПодсказкаВвода = НСтр(""ru = ''"");
		Элементы.ПапкаДляДоговора.АвтоМаксимальнаяШирина = Ложь;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	Если ЗначениеЗаполнено(ОБъект.Шаблон) Тогда
		Попытка
			СохранитьШаблонНаКлиенте();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ЗаполнитьПоНазначенномуОбъекту();	
	ОбновитьПараметрыЗамены();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПередИзменением = Контрагент;
	Контрагент = Объект.Контрагент;
	Если КонтрагентПередИзменением = Контрагент Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Объект.ДоговорКонтрагента = ПолучитьДоговорСКонтрагентомПоУмолчанию(Объект.Организация, Объект.Контрагент);
	КонецЕсли;
	
	ОбновитьПараметрыЗамены();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьПараметрыЗамены();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ОбновитьПараметрыЗамены();
	
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	
	ИзменениеРеквизитаСоСпискомВыбора(Элементы.Город,Объект.Город,""Город"");
	ЗаменитьСтроку(""<Город>"",Объект.Город,""Город"");
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	ОбновитьПараметрыЗамены();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОБъект.Шаблон) Тогда
		СохранитьШаблонНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаПараметровЗамены

&НаКлиенте
Процедура ТаблицаПараметровЗаменыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПараметровЗамены.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТаблицаПараметровЗаменыПараметр.ТолькоПросмотр = ТекущиеДанные.Системный;
	Элементы.ТаблицаПараметровЗаменыПояснение.ТолькоПросмотр = ТекущиеДанные.Системный;
	
	СписокВыбора = Элементы.ТаблицаПараметровЗаменыЗамена.СписокВыбора;
	СписокВыбора.Очистить();
	Если ТекущиеДанные.Параметр = ""<Основание>"" Тогда
		Элементы.ТаблицаПараметровЗаменыЗамена.КнопкаВыпадающегоСписка = Истина;
		СписокВыбора.Добавить(""Устава"");
		СписокВыбора.Добавить(""Доверенности №"");
		СписокВыбора.Добавить(""Свидетельства №"");
		СписокВыбора.Добавить(""________________________________________"");
	ИначеЕсли ТекущиеДанные.Параметр = ""<именуемое>"" Тогда
		Элементы.ТаблицаПараметровЗаменыЗамена.КнопкаВыпадающегоСписка = Истина;
		СписокВыбора.Добавить(""именуемое"");
		СписокВыбора.Добавить(""именуемый"");		
	ИначеЕсли ТекущиеДанные.Параметр = ""<ДолжностьПокупателя>"" Тогда
		Элементы.ТаблицаПараметровЗаменыЗамена.КнопкаВыпадающегоСписка = Истина;
		СписокВыбора.Добавить(""Директор"");
		СписокВыбора.Добавить(""Генеральный директор"");
	Иначе
		Элементы.ТаблицаПараметровЗаменыЗамена.КнопкаВыпадающегоСписка = Ложь;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СправкаПоПараметрам(Команда)
	
	ТабДок = Новый ТабличныйДокумент;
	ПолучитьИнформационныйМакет(ТабДок);
	
	ТабДок.Показать(""Обозначения данных"");
	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОбразецDocШаблона(Команда)
	
	Макет = ПолучитьМакетШаблона();
	ИмяМакета = НСтр(""ru = 'Образец шаблона'"") + "".doc"";
	ИмяФайла = КаталогВременныхФайлов() + ИмяМакета;
	Макет.Сохранить(ИмяФайла);
	
	ДД = Новый ДвоичныеДанные(ИмяФайла);
	Адрес = ПоместитьВоВременноеХранилище(ДД);
	
	Объект.Шаблон = ЗаписатьФайлНаСервере(Адрес, Объект.ПапкаДляДоговора, ИмяМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗамены(Команда)
	
	ОбновитьПараметрыЗамены();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВосстановитьЗначениеНаСервере(ИмяНастройки)
	
	Возврат ХранилищеОбщихНастроек.Загрузить(ИмяНастройки);	
	
КонецФункции // ВосстановитьЗначениеНаСервере()

&НаСервере
Процедура ПолучитьИнформационныйМакет(ТабДок)
	
	Макет = РеквизитФормыВЗначение(""Объект"").ПолучитьМакет(""МакетИнформационный""); 
	ТабДок.Вывести(Макет);	
	ТабДок.ОтображатьСетку = Ложь;
	
КонецПроцедуры // ПолучитьИнформационныйМакет()

&НаСервере
Функция ПолучитьМакетШаблона()
	
	Возврат РеквизитФормыВЗначение(""Объект"").ПолучитьМакет(""МакетШаблона""); 
	
КонецФункции // ПолучитьМакетШаблона()

&НаСервереБезКонтекста
Функция ПолучитьДоговорСКонтрагентомПоУмолчанию(Организация, Контрагент)	
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		""ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.Контрагент = &Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДоговорыКонтрагентов.Дата УБЫВ"";
		
	Если Метаданные.Имя = ""БухгалтерияПредприятия"" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "".Контрагент"", "".Владелец"");
	КонецЕсли;
	
	Запрос.УстановитьПараметр(""Организация"", Организация);
	Запрос.УстановитьПараметр(""Контрагент"", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИзменениеРеквизитаСоСпискомВыбора(ЭлементФормы,ЗначениеРеквизита,ИмяРеквизита,НеДобавлятьКСпискуВыбора = Ложь)
	
	НаименованиеНастройки = ""Обработки_ПечатьДоговораСПокупателем_"" + ИмяРеквизита;
	Если Не НеДобавлятьКСпискуВыбора Тогда
		ДобавитьСтрокуКСпискуВыбора(ЭлементФормы.СписокВыбора.ВыгрузитьЗначения(), ЗначениеРеквизита, НаименованиеНастройки); 
	КонецЕсли;
	СохраненныйСписок = ВосстановитьЗначениеНаСервере(НаименованиеНастройки);
	Если ТипЗнч(СохраненныйСписок) = Тип(""Массив"") Тогда
		ЭлементФормы.СписокВыбора.ЗагрузитьЗначения(СохраненныйСписок);
	КонецЕсли;
	Если  НеДобавлятьКСпискуВыбора Тогда
		Если ТипЗнч(СохраненныйСписок) = Тип(""Массив"") Тогда
		     Объект[ИмяРеквизита] = СохраненныйСписок[0];
		КонецЕсли;		 
	КонецЕсли;
	
КонецПроцедуры // ИзменениеРеквизитаСоСпискомВыбора()

&НаСервереБезКонтекста
Процедура ДобавитьСтрокуКСпискуВыбора(МассивСохраняемыхЗначений, ЗначениеСохранения, ИмяПараметраДляСохранения)
	
	Если ПустаяСтрока(ЗначениеСохранения) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныйЭлемент = МассивСохраняемыхЗначений.Найти(ЗначениеСохранения);
	Если НайденныйЭлемент <> Неопределено Тогда
		МассивСохраняемыхЗначений.Удалить(НайденныйЭлемент);
	КонецЕсли;
	
	МассивСохраняемыхЗначений.Вставить(0, ЗначениеСохранения);
	
	Пока МассивСохраняемыхЗначений.Количество() > 10 Цикл
		МассивСохраняемыхЗначений.Удалить(МассивСохраняемыхЗначений.Количество() - 1);
	КонецЦикла;
	
	Если (ЗначениеЗаполнено(ИмяПараметраДляСохранения)) И ТипЗнч(ИмяПараметраДляСохранения) = Тип(""Строка"") Тогда
		ХранилищеОбщихНастроек.Сохранить(ИмяПараметраДляСохранения,, МассивСохраняемыхЗначений);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеПоОрганизации(ЮрФизЛицо, ДатаПериода = '20200101', ДляФизЛицаТолькоИнициалы = Истина, БанковскийСчет = Неопределено)
	
	Результат = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо,ДатаПериода, БанковскийСчет);
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		""ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтрагентыКонтактнаяИнформация.Представление
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)"";
	
	Если ТипЗнч(ЮрФизЛицо) = Тип(""СправочникСсылка.Организации"") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "".Контрагенты."", "".Организации."");
	КонецЕсли;
	
	Запрос.УстановитьПараметр(""Ссылка"", ЮрФизЛицо);                         
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить(""EMail"", Выборка.Представление);
	Иначе
		Результат.Вставить(""EMail"", """");
	КонецЕсли;	
	
	Если ПустаяСтрока(Результат.EMail) И ТипЗнч(ЮрФизЛицо) = Тип(""СправочникСсылка.Контрагенты"") Тогда
		
		Если Метаданные.Имя = ""БухгалтерияПредприятия"" Тогда
			Запрос.Текст = 
				""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление
				|ИЗ
				|	Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
				|ГДЕ
				|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.ОбъектВладелец = &Владелец
				|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)"";
		Иначе
			Запрос.Текст =
				""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление
				|ИЗ
				|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
				|ГДЕ
				|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.Владелец = &Владелец
				|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)"";				
		КонецЕсли;
		
		Запрос.УстановитьПараметр(""Владелец"", ЮрФизЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Результат.Вставить(""EMail"", Выборка.Представление);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////ЗАПОЛНЕНИЕ
&НаКлиенте
Процедура ОбновитьПараметрыЗамены()
	
	//////////////////////////////////////////ОРГАНИЗАЦИЯ
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		СведенияОПоставщике  	= ДанныеПоОрганизации(Объект.Организация,ТекущаяДата(), , Объект.БанковскийСчет);
		СтруктураОрганизации 	= ПолучитьСтруктуруОрганизации(Объект.Организация);
		ВыборкаДолжностьФио		= ПолучитьДолжностьФиоРуководителя(Объект.Организация);
		
		ЗаменитьСтроку(""<ОрганизацияН>""	,СокрЛП(СведенияОПоставщике.Представление)		,""Наименование организации"");
		ЗаменитьСтроку(""<ОрганизацияПН>"",СокрЛП(СведенияОПоставщике.ПолноеНаименование)	,""Полное наименование организации"");
		ЗаменитьСтроку(""<ОрганизацияБд>"",СокрЛП(СтруктураОрганизации.НаименованиеПлательщикаПриПеречисленииНалогов),""Наименование для бюджета организации"");
		ЗаменитьСтроку(""<Организация>""	,СокрЛП(СтруктураОрганизации.ТекстКорреспондента),""Наименование организации в поле """"Плательщик"""" основного банковского счета (Выводится только в случае отличия от полного наименования организации)"");
		Если ВыборкаДолжностьФио <> Неопределено Тогда		
			
			ДолжностьРуководителяОрганизации= ВыборкаДолжностьФио.Должность;
			Должность						= ПадежФИО(ВыборкаДолжностьФио.Должность,2,Ложь);
			Фио								=  ПадежФИО(ВыборкаДолжностьФио.ФИО,2,Ложь);
			ДолжностьИмяРуководителяОрганизации = СокрЛП(СокрЛП(Должность) + "" "" + СокрЛП(Фио));
			РуководительОрганизации			= ПадежФИО(ВыборкаДолжностьФио.ФИО,1,Истина);
			
			ЗаменитьСтроку(""<ДолжностьИмяРуководителяОрганизации>""	, СокрЛП(ДолжностьИмяРуководителяОрганизации),""Должность руководителя и ФИО из регистра """"Ответственные лица организации"""" и """"ФИО"""" в род. падеже"");
			ЗаменитьСтроку(""<ДолжностьРуководителяОрганизации>""		, СокрЛП(ДолжностьРуководителяОрганизации),""Должность руководителя  в именительном падеже"");
			ЗаменитьСтроку(""<РуководительОрганизации>""				, СокрЛП(РуководительОрганизации),""Физ. лицо из регистра """"Ответственные лица организации"""" Заполняется фамилия и инициалы"");			
		Иначе
			ЗаменитьСтроку(""<ДолжностьИмяРуководителяОрганизации>""	,"""",""Должность руководителя и ФИО из регистра """"Ответственные лица организации"""" и """"ФИО"""" в род. падеже"");
			ЗаменитьСтроку(""<ДолжностьРуководителяОрганизации>""		,"""",""Должность руководителя  в именительном падеже"");
			ЗаменитьСтроку(""<РуководительОрганизации>""				,"""",""Физ. лицо из регистра """"Ответственные лица организации"""" Заполняется фамилия и инициалы"");		
		КонецЕсли;
		ЗаменитьСтроку(""<ЮрАдрес>""		,СокрЛП(СведенияОПоставщике.ЮридическийАдрес),""Юридический адрес организации"");
		ЗаменитьСтроку(""<ФактАдрес>""	,СокрЛП(СведенияОПоставщике.ФактическийАдрес),""Фактический адрес организации"");
		ЗаменитьСтроку(""<ИНН>""			,СокрЛП(СведенияОПоставщике.ИНН),""ИНН организации"");
		ЗаменитьСтроку(""<КПП>""			,СокрЛП(СведенияОПоставщике.КПП),""КПП организации"");
		ЗаменитьСтроку(""<БИК>""			,СокрЛП(СведенияОПоставщике.БИК),""БИК организации"");
		ЗаменитьСтроку(""<ОКПО>""			,СокрЛП(СведенияОПоставщике.КодПоОКПО),""ОКПО организации"");
		Попытка
			ЗаменитьСтроку(""<ОГРН>""			,СокрЛП(СведенияОПоставщике.ОГРН),""ОГРН организации"");
		Исключение
		КонецПопытки;
		
		Если ЗначениеЗаполнено(СведенияОПоставщике.Банк) Тогда
			// Сорокин - 11.04.2019 - начало
			// Банк = ПолучитьРеквизит(СведенияОПоставщике.Банк,""Наименование"");
			Если ТипЗнч(СведенияОПоставщике.Банк) = Тип(""Строка"") Тогда
				Банк = СведенияОПоставщике.Банк;
			Иначе
				Банк = ПолучитьРеквизит(СведенияОПоставщике.Банк,""Наименование"");
			КонецЕсли;
			// Сорокин - 11.04.2019 - конец
		Иначе
			Банк = """";
		КонецЕсли;
		ЗаменитьСтроку(""<Банк>""			,СокрЛП(Банк),""Банк основного счета организации"");
		ЗаменитьСтроку(""<РасчСчет>""		,СокрЛП(СведенияОПоставщике.НомерСчета),""Номер счета  основного счета организации"");	
		ЗаменитьСтроку(""<КорСчет>""		,СокрЛП(СведенияОПоставщике.КоррСчет),""Корр. счет основного счета организации"");
		ЗаменитьСтроку(""<Тел>""			,СокрЛП(СведенияОПоставщике.Телефоны),""Телефон организации"");
		ЗаменитьСтроку(""<EMail>""		,СокрЛП(СведенияОПоставщике.EMail),""E-Mail организации"");
		
	Иначе	
		
		ЗаменитьСтроку(""<ОрганизацияН>""						,"""",""Наименование организации"");
		ЗаменитьСтроку(""<ОрганизацияПН>""					,"""",""Полное наименование организации"");
		ЗаменитьСтроку(""<ОрганизацияБд>""					,"""",""Наименование для бюджета организации"");
		ЗаменитьСтроку(""<Организация>""						,"""",""Наименование организации в поле """"Плательщик"""" основного банковского счета (Выводится только в случае отличия от полного наименования организации)"");
		ЗаменитьСтроку(""<ДолжностьИмяРуководителяОрганизации>"","""",""Должность руководителя и ФИО из регистра """"Ответственные лица организации"""" и """"ФИО"""" в род. падеже"");
		ЗаменитьСтроку(""<ДолжностьРуководителяОрганизации>""	,"""",""Должность руководителя  в именительном падеже"");
		ЗаменитьСтроку(""<РуководительОрганизации>""			,"""",""Физ. лицо из регистра """"Ответственные лица организации"""" Заполняется фамилия и инициалы"");
		ЗаменитьСтроку(""<ЮрАдрес>""							,"""",""Юридический адрес организации"");
		ЗаменитьСтроку(""<ФактАдрес>""						,"""",""Фактический адрес организации"");
		ЗаменитьСтроку(""<ИНН>""								,"""",""ИНН организации"");
		ЗаменитьСтроку(""<КПП>""								,"""",""КПП организации"");
		ЗаменитьСтроку(""<БИК>""								,"""",""БИК организации"");
		ЗаменитьСтроку(""<ОКПО>""								,"""",""ОКПО организации"");
		ЗаменитьСтроку(""<ОГРН>""								,"""",""ОГРН организации"");
		ЗаменитьСтроку(""<ОКАТО>""							,"""",""ОКАТО организации"");
		ЗаменитьСтроку(""<Банк>""								,"""",""Банк основного счета организации"");
		ЗаменитьСтроку(""<РасчСчет>""							,"""",""Номер счета  основного счета организации"");
		ЗаменитьСтроку(""<КорСчет>""							,"""",""Корр. счет основного счета организации"");		
		ЗаменитьСтроку(""<Тел>""								,"""",""Телефон организации"");
		ЗаменитьСтроку(""<EMail>""							,"""",""E-Mail организации"");
		
	КонецЕсли;
	
	//////////////////////////////////////////КОНТРАГЕНТ
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		СведенияОПокупателе 			= ДанныеПоОрганизации(Объект.Контрагент,ТекущаяДата(), ,);
		СтруктураДолжностьФиоКА 		= ПолучитьДолжностьФиоРуководителяКонтрагента(Объект.Контрагент);
		
		ЗаменитьСтроку(""<ПокупательН>""	,СокрЛП(СведенияОПокупателе.Представление),""Наименование контрагента"");
		ЗаменитьСтроку(""<ПокупательПН>""	,СокрЛП(СведенияОПокупателе.ПолноеНаименование),""Полное наименование контрагента"");
		
		Если СтруктураДолжностьФиоКА <> Неопределено Тогда		
			
			Должность = СтруктураДолжностьФиоКА.Должность;
			ДолжностьРуководителяКА = Должность;
			//Если должность длинная, то надо склонять только два первых слова
			ДобавкаКДолжности = """";	
			Если СтрЧислоВхождений(Должность,"" "")> 2 Тогда	
				ДобавкаКДолжности 		= Должность;
				Должность 				= """";
				Для Сч = 1 По 2 Цикл
					НомерПробела 		= Найти(ДобавкаКДолжности,"" "");
					Должность 			= Должность + Лев(ДобавкаКДолжности,НомерПробела);
					ДобавкаКДолжности 	= Прав(ДобавкаКДолжности,СтрДлина(ДобавкаКДолжности)-НомерПробела);	
				КонецЦикла;
			КонецЕсли;
			ДолжностьПокупателяСкл		= ПадежФИО(Должность,2,Ложь) + ДобавкаКДолжности;
			Фио							= ПадежФИО(СтруктураДолжностьФиоКА.ФИО,2,Ложь);
			ДолжностьИмяРуководителяКА 	= СтрЗаменить(СокрЛП(ДолжностьПокупателяСкл) + "" "" + СокрЛП(Фио), "","", """");
			РуководительКА 				= СокрЛП(СтрЗаменить(ПадежФИО(СтруктураДолжностьФиоКА.ФИО,1,Истина), "". "", "".""));
			
			ЗаменитьСтроку(""<ДолжностьИмяПокупателя>"",СокрЛП(ДолжностьИмяРуководителяКА),""Берется представление контактного лица контрагента с ролью, в описание которой есть слово """"Руководитель"""" в род. падеже"");
			ЗаменитьСтроку(""<ДолжностьПокупателя>""	 ,СокрЛП(ДолжностьРуководителяКА)	,""Должность руководителя в именительном падеже"");
			ЗаменитьСтроку(""<РуководительПокупателя>"",СокрЛП(РуководительКА)			,""Руководитель контрагента - только фамилия и инициалы"");			
			
			Основание = СтруктураДолжностьФиоКА.Основание;			
			ЗаменитьСтроку(""<Основание>"",?(ПустаяСтрока(Основание), ""________________________________________"", СокрЛП(Основание)),""Основание действий покупателя (Устав, Свидетельство и т.п.)"");
		Иначе
			ЗаменитьСтроку(""<ДолжностьИмяПокупателя>"","""",""Берется представление контактного лица контрагента с ролью, в описание которой есть слово """"Руководитель"""" в род. падеже"");
			ЗаменитьСтроку(""<ДолжностьПокупателя>""	,"""",""Должность руководителя  в именительном падеже"");
			ЗаменитьСтроку(""<РуководительПокупателя>"","""",""Руководитель контрагента - только фамилия и инициалы"");		
			ЗаменитьСтроку(""<Основание>"",""________________________________________"",""Основание действий покупателя (Устав, Свидетельство и т.п.)"");
		КонецЕсли;
		
		ЗаменитьСтроку(""<ПокЮрАдрес>""				,СокрЛП(СведенияОПокупателе.ЮридическийАдрес),""Юридический адрес контрагента"");
		ЗаменитьСтроку(""<ПокФактАдрес>""				,СокрЛП(СведенияОПокупателе.ФактическийАдрес),""Фактический адрес контрагента"");
		ЗаменитьСтроку(""<ПокИНН>""					,СокрЛП(СведенияОПокупателе.ИНН),""ИНН контрагента"");
		ЗаменитьСтроку(""<ПокКПП>""					,СокрЛП(СведенияОПокупателе.КПП),""КПП контрагента"");
		ЗаменитьСтроку(""<ПокБИК>""					,СокрЛП(СведенияОПокупателе.БИК),""БИК контрагента"");		
		ЗаменитьСтроку(""<ПокОКПО>""					,СокрЛП(СведенияОПокупателе.КодПоОКПО),""ОКПО контрагента"");
		ЗаменитьСтроку(""<ПокТел>""					,СокрЛП(СведенияОПокупателе.Телефоны),""Телефон контрагента"");
		ЗаменитьСтроку(""<ПокРасчСчет>""				,СокрЛП(СведенияОПокупателе.НомерСчета),""Номер счета  основного счета контрагента"");
		ЗаменитьСтроку(""<ПокКорСчет>""				,СокрЛП(СведенияОПокупателе.КоррСчет),""Корр. счет основного счета контрагента"");
		Попытка
			ЗаменитьСтроку(""<ПокОГРН>""					,СокрЛП(СведенияОПокупателе.ОГРН),""ОГРН контрагента"");
		Исключение
		КонецПопытки;
		Если ЗначениеЗаполнено(СведенияОПокупателе.Банк) Тогда
			// Сорокин - 11.04.2019 - начало
			// Банк = ПолучитьРеквизит(СведенияОПокупателе.Банк,""Наименование"");
			Если ТипЗнч(СведенияОПокупателе.Банк) = Тип(""Строка"") Тогда
				Банк = СведенияОПокупателе.Банк;
			Иначе
				Банк = ПолучитьРеквизит(СведенияОПокупателе.Банк,""Наименование"");
			КонецЕсли;
			// Сорокин - 11.04.2019 - конец
		Иначе
			Банк = """";
		КонецЕсли;
	    ЗаменитьСтроку(""<ПокБанк>"",Банк,""Банк основного счета контрагента"");	
		ЮрЛицо = ЭтоЮрЛицо(Объект.Контрагент);
		Именуемое    =  ?(ЮрЛицо,""именуемое"",""именуемый"");
		ЗаменитьСтроку(""<именуемое>"",Именуемое,""Юр.лицо - """"именуемое"""", физ.лицо - """"именуемый"""""");
		
		ЗаменитьСтроку(""<ПокEMail>"", СведенияОПокупателе.EMail,""E-mail контрагента"");
		
	Иначе	
		
		ЗаменитьСтроку(""<ПокупательН>""				,"""",""Наименование контрагента"");
		ЗаменитьСтроку(""<ПокупательПН>""				,"""",""Полное наименование контрагента"");
		ЗаменитьСтроку(""<ДолжностьИмяПокупателя>""	,"""",""Берется представление контактного лица контрагента с ролью, в описание которой есть слово """"Руководитель"""" в род. падеже"");
		ЗаменитьСтроку(""<ДолжностьПокупателя>""		,"""",""Должность руководителя  в именительном падеже"");
		ЗаменитьСтроку(""<РуководительПокупателя>""	,"""",""Руководитель контрагента - только фамилия и инициалы"");
		ЗаменитьСтроку(""<ПокЮрАдрес>""				,"""",""Юридический адрес контрагента"");
		ЗаменитьСтроку(""<ПокФактАдрес>""				,"""",""Фактический адрес контрагента"");
		ЗаменитьСтроку(""<ПокИНН>""					,"""",""ИНН контрагента"");
		ЗаменитьСтроку(""<ПокКПП>""					,"""",""КПП контрагента"");
		ЗаменитьСтроку(""<ПокБИК>""					,"""",""БИК контрагента"");
		ЗаменитьСтроку(""<ПокОКПО>""					,"""",""ОКПО контрагента"");
		ЗаменитьСтроку(""<ПокТел>""					,"""",""Телефон контрагента"");
		ЗаменитьСтроку(""<ПокРасчСчет>""				,"""",""Номер счета  основного счета контрагента"");
		ЗаменитьСтроку(""<ПокКорСчет>""				,"""",""Корр. счет основного счета контрагента"");		
		ЗаменитьСтроку(""<ПокБанк>""					,"""",""Банк основного счета контрагента"");
		ЗаменитьСтроку(""<именуемое>""				,""именуемое"",""Юр.лицо - """"именуемое"""", физ.лицо - """"именуемый"""""");
		ЗаменитьСтроку(""<ПокEMail>""					,"""",""E-mail контрагента"");
		ЗаменитьСтроку(""<Основание>""				,""________________________________________"",""Основание действий покупателя (Устав, Свидетельство и т.п.)"");
		
	КонецЕсли;
	
	//////////////////////////////////////////////ДОГОВОР КОНТРАГЕНТА
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		СтруктураДоговора = ПолучитьСтруктуруДоговора(Объект.ДоговорКонтрагента);
		ЗаменитьСтроку(""<НомерДоговора>""			, СокрЛП(СтруктураДоговора.НомерДоговора),""Номер договора"");
		ЗаменитьСтроку(""<ДатаДоговора>""				, СокрЛП(Формат(СтруктураДоговора.ДатаДоговора,""ДФ=dd.MM.yyyy"")),""Дата договора"");
		ЗаменитьСтроку(""<День>""						, Формат(День(СтруктураДоговора.ДатаДоговора),""ЧЦ=2; ЧН=0; ЧВН=""),""День из даты""""от"""" договора"");
		МесяцПрописью								= Формат(СтруктураДоговора.ДатаДоговора,""ДФ=MMMM"");
		МесяцПрописью								= НРег(ПадежФИО(МесяцПрописью,2));
		Если СокрЛП(МесяцПрописью) = ""мого"" Тогда
			МесяцПрописью = ""мая"";
		КонецЕсли;
		ЗаменитьСтроку(""<Месяц>""					, СокрЛП(МесяцПрописью),""Месяц из даты """"от"""" в род. падеже"");
		ЗаменитьСтроку(""<Год>""						, Формат(Год(СтруктураДоговора.ДатаДоговора),""ЧГ=""),""Год из даты """"от"""" договора"");
	КонецЕсли;
	
	//////////////////////////////////////////////ИЗ ФОРМЫ
	
	// Сорокин - 11.04.2019 - начало
	ДобавитьДополнительныеРеквизитыДоговора();
	// Сорокин - 11.04.2019 - конец
			
КонецПроцедуры // ()

// Сорокин - 11.04.2019 - начало
&НаКлиенте
Процедура ДобавитьДополнительныеРеквизитыДоговора()
	
	ЗаполнитьТаблицуДопРеквизитовНаСервере();
	
	Для Каждого Строка Из Объект.ДополнительныеРеквизитыДоговора Цикл
		ЗаменитьСтроку(""<"" + Строка.Параметр + "">"", СокрЛП(Строка.Замена), Строка.Пояснение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДопРеквизитовНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство.Имя КАК Параметр,
	|	ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство.Подсказка КАК Пояснение,
	|	ДоговорыКонтрагентовДополнительныеРеквизиты.Значение КАК Замена
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов.ДополнительныеРеквизиты КАК ДоговорыКонтрагентовДополнительныеРеквизиты
	|ГДЕ
	|	ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка = &Ссылка"";
	
	Запрос.УстановитьПараметр(""Ссылка"", Объект.ДоговорКонтрагента);
	
	Объект.ДополнительныеРеквизитыДоговора.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
// Сорокин - 11.04.2019 - конец

&НаСервереБезКонтекста
Функция  ПолучитьСтруктуруОрганизации(Организация)

	Если Метаданные.Имя = ""БухгалтерияПредприятия"" Тогда
		Выборка = Справочники.БанковскиеСчета.Выбрать(, Организация);
	Иначе
		Выборка = Справочники.БанковскиеСчетаОрганизаций.Выбрать(, Организация,,""НомерСчета Возр"");
	КонецЕсли;
	СтруктураОрганизации =   Новый Структура();

	Если Выборка.Следующий() Тогда
		СтруктураОрганизации.Вставить(""БанковскийСчетПоУмолчанию"", Выборка.Ссылка);
		СтруктураОрганизации.Вставить(""ТекстКорреспондента"", Выборка.ТекстКорреспондента);
	Иначе
		СтруктураОрганизации.Вставить(""БанковскийСчетПоУмолчанию"", """");
		СтруктураОрганизации.Вставить(""ТекстКорреспондента"", """");
	КонецЕсли;
	
	СтруктураОрганизации.Вставить(""НаименованиеПлательщикаПриПеречисленииНалогов"",Организация.НаименованиеПолное);
	Возврат СтруктураОрганизации;
	
КонецФункции // ПолучитьСтруктуруОрганизации()

&НаСервереБезКонтекста
Функция ПолучитьДолжностьФиоРуководителя(Организация)
	
	а = ОтветственныеЛицаБППовтИсп.ОтветственныеЛица(Организация, КонецДня(ТекущаяДата()));
	
	Попытка
		СтруктураДолжностиФИО = Новый Структура(""Должность,ФИО"",а.РуководительДолжность,а.Руководитель.Наименование);
		Возврат СтруктураДолжностиФИО;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
		
КонецФункции // ПолучитьСтруктуруОрганизации()

&НаСервереБезКонтекста
Функция ПолучитьДолжностьФиоРуководителяКонтрагента(Контрагент)
	           
	Запрос = Новый Запрос;
	Если Метаданные.Имя = ""БухгалтерияПредприятия"" Тогда
		Запрос.Текст = 
			""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	КонтактныеЛицаПартнеров.Должность КАК Должность,
			|	КонтактныеЛицаПартнеров.Наименование КАК ФИО,
			|	КонтактныеЛицаПартнеров.Описание КАК Основание
			|ИЗ
			|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.ОбъектВладелец = &Владелец
			|	И НЕ КонтактныеЛицаПартнеров.Должность ПОДОБНО """"%ответственный%"""""";
		
		Запрос.УстановитьПараметр(""Владелец"", Контрагент);
	Иначе
		Запрос.Текст = 
			""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	КонтактныеЛицаПартнеров.ДолжностьПоВизитке КАК Должность,
			|	КонтактныеЛицаПартнеров.Наименование КАК ФИО,
			|	КонтактныеЛицаПартнеров.Комментарий КАК Основание
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Владелец = &Владелец
			|	И НЕ КонтактныеЛицаПартнеров.ДолжностьПоВизитке ПОДОБНО """"%ответственный%"""""";		
		Запрос.УстановитьПараметр(""Владелец"", Контрагент.Партнер);
	КонецЕсли;	
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		СтруктураДолжностиФИО = Новый Структура(""Должность,ФИО,Основание"",Выборка.Должность,Выборка.ФИО,Выборка.Основание);
		Возврат СтруктураДолжностиФИО;
	КонецЕсли;
	
КонецФункции // ПолучитьСтруктуруОрганизации()

&НаКлиенте
Процедура ЗаменитьСтроку(Параметр,Замена,Пояснение)
	
	Поиск = Новый Структура(""Параметр"", Параметр);
	
	НайденныеСтроки = Объект.ТаблицаПараметровЗамены.НайтиСтроки(Поиск);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденнаяСтрока = НайденныеСтроки[0];
	Иначе
		НайденнаяСтрока = Объект.ТаблицаПараметровЗамены.Добавить();
	КонецЕсли;
	НайденнаяСтрока.Параметр  = Параметр;
	НайденнаяСтрока.Замена    = Замена;
	НайденнаяСтрока.Пояснение = Пояснение;
	НайденнаяСтрока.Системный = Истина;
		
КонецПроцедуры // ()

&НаСервере
Функция ПолучитьДанныеФайла()
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(Объект.Шаблон, , УникальныйИдентификатор);
	ДанныеФайла = РаботаСФайлами.ДанныеФайла(Объект.Шаблон, УникальныйИдентификатор, , Истина);
	
	Возврат ДанныеФайла;
	
КонецФункции

&НаКлиенте
Функция СохранитьШаблонНаКлиенте()
	
	ДанныеФайла = ПолучитьДанныеФайла();
	
	РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВерсииВРабочийКаталог(
			,
			ДанныеФайла,
			"""");
			
	Возврат ДанныеФайла.ПолноеИмяФайлаВРабочемКаталоге;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьФайлНаСервере(Знач Адрес, Знач Папка, Знач Наименование)
	
	ДД			= ПолучитьИзВременногоХранилища(Адрес);
	ИмяФайла	= КаталогВременныхФайлов() + Наименование;
	ДД.Записать(ИмяФайла);
	Результат	= РаботаСФайлами.СоздатьФайлНаОсновеФайлаНаДиске(Папка, ИмяФайла);
	УдалитьФайлы(ИмяФайла);   
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СформироватьДоговорИОткрыть(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ""Выберите организацию"";
		Сообщение.Поле = СокрЛП(""Объект.Организация"");
		Сообщение.УстановитьДанные(Объект.Организация);
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ""Выберите контрагента"";
		Сообщение.Поле = СокрЛП(""Объект.Контрагент"");
		Сообщение.УстановитьДанные(Объект.Контрагент);
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Шаблон) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ""Выберите шаблон, по которому будет формироваться договор"";
		Сообщение.Поле = СокрЛП(""Объект.Шаблон"");
		Сообщение.УстановитьДанные(Объект.Шаблон);
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Шаг = -1;
	Если Команда.Имя = ""СоздатьДоговор"" Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ПапкаДляДоговора) Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ""Выберите папку, куда сохранить договор"";
			Сообщение.Поле = СокрЛП(""Объект.ПапкаДляДоговора"");
			Сообщение.УстановитьДанные(Объект.ПапкаДляДоговора);
			Сообщение.Сообщить();
			Возврат;
			
		КонецЕсли;
		
		ВсегоШагов = 8;
	Иначе
		ВсегоШагов = 5;
	КонецЕсли;
	
	// Сохранение шаблона
	Шаг = Шаг + 1;
	Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Сохранение шаблона'""));
	ИмяФайлаШаблона = СохранитьШаблонНаКлиенте();	
	Если ПустаяСтрока(ИмяФайлаШаблона) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр(""ru = 'Не найден файл шаблона!'"");
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайлаШаблона);
	Если ДвоичныеДанныеФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИмяКаталога = КаталогВременныхФайлов();
	
	Наименование = """";
		
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Наименование = ПолучитьРеквизит(Объект.Контрагент,""Наименование"");
	Иначе	
		Наименование = ""Без_контрагента"";
	КонецЕсли;
	
	Поиск = Новый Структура(""Параметр"",""<НомерДоговора>"");	
	НайденныеСтроки = Объект.ТаблицаПараметровЗамены.НайтиСтроки(Поиск);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденнаяСтрока = НайденныеСтроки[0];
		Наименование = Наименование + "" N_"" + СокрЛП(НайденнаяСтрока.Замена);
	КонецЕсли;
	
	Поиск = Новый Структура(""Параметр"",""<ДатаДоговора>"");	
	НайденныеСтроки = Объект.ТаблицаПараметровЗамены.НайтиСтроки(Поиск);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденнаяСтрока = НайденныеСтроки[0];
		Наименование = Наименование + "" от "" + СокрЛП(НайденнаяСтрока.Замена);
	КонецЕсли;	
	
	Наименование = СтрЗаменить(Наименование,"" "",""_"");
	СписокСимволов = ПолучитьСписокЗапрещенныхСимволовВИменахФайлов();	
	Для Каждого СтрокаЗапретногоСимвола  Из СписокСимволов Цикл		
		Наименование = СтрЗаменить(Наименование,  СтрокаЗапретногоСимвола.Значение, """");				
	КонецЦикла;
	
	Наименование = Наименование + "".doc"";
	ИмяФайла  = ИмяКаталога + ?(Прав(ИмяКаталога,1) = ""\"","""",""\"")+ Наименование;
	
	Попытка
		
		// Сохранение заготовки
		Шаг = Шаг + 1;
		Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Сохранение заготовки договора'""));		
		ДвоичныеДанныеФайла.Записать(ИмяФайла);
		
		// Открытие заготовки
		Шаг = Шаг + 1;
		Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Открываем заготовку договора'""));		
		
		MSWord = ПолучитьCOMОбъект(ИмяФайла);
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
		Возврат ;
		
	КонецПопытки;
	
	Попытка
		
		Документ = MSWord.Application.Documents(1);
		Документ.Activate();
		
		// Параметры
		Шаг = Шаг + 1;
		Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Заменяем параметры в заготовке договора'""));		
		
		Для каждого СтрокаТч Из Объект.ТаблицаПараметровЗамены Цикл			
			// Если Не ПустаяСтрока(СтрокаТч.Замена) Тогда // Сорокин
				Замена = Документ.Content.Find;
				Замена.Execute(СтрокаТч.Параметр,Ложь,Истина,Ложь,,,Истина,,Ложь,СтрокаТч.Замена,2); 				
			// КонецЕсли; // Сорокин
		КонецЦикла;
		
		// Сорокин - 11.04.2019 - начало
		// Изменение колонтитулов
		Для каждого СтрокаТч Из Объект.ТаблицаПараметровЗамены Цикл			
			Замена = Документ.Sections(1).Headers(1).Range.Find;
			Замена.Execute(СтрокаТч.Параметр,Ложь,Истина,Ложь,,,Истина,,Ложь,СтрокаТч.Замена,2);
				
			Замена = Документ.Sections(1).Footers(1).Range.Find;
			Замена.Execute(СтрокаТч.Параметр,Ложь,Истина,Ложь,,,Истина,,Ложь,СтрокаТч.Замена,2);
		КонецЦикла;		
		// Сорокин - 11.04.2019 - конец
		
		Если Команда.Имя = ""СоздатьДоговор"" Тогда
			
			Шаг = Шаг + 1;
			Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Сохранение заготовки с параметрами'""));
			MSWord.Save();
			
			Шаг = Шаг + 1;
			Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Закрытие заготовки'""));			
			MSWord.Application.Quit(); //закрыть Word
   			MSWord = 0;
			
			Шаг = Шаг + 1;
			Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Запись договора в ИБ'""));			
			ДД = Новый ДвоичныеДанные(ИмяФайла);			
			
			УИД = ПоместитьВоВременноеХранилище(ДД);
			ФайлСсылка = ЗаписатьФайлНаСервере(УИД, Объект.ПапкаДляДоговора, Наименование);
			
			Шаг = Шаг + 1;
			Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Открытие договора ИБ'""));
			ПоказатьЗначение(,ФайлСсылка);
			           
		Иначе             
			// Параметры
			Шаг = Шаг + 1;
			Состояние(НСтр(""ru = 'Формирование договора'""), Окр(Шаг * 100 / ВсегоШагов), НСтр(""ru = 'Открытие договора'""));		
			
			MSWord.Application.Visible = Истина;
			MSWord.Activate();			
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
		MSWord.Application.Quit();
		
	КонецПопытки;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизит(ОбъектМетаданных, ИмяРеквизита)
	
	Попытка
		Возврат ОбъектМетаданных[ИмяРеквизита];
	Исключение
		Возврат """";
	КонецПопытки;		
	
КонецФункции // ПолучитьНаименованиеКонтрагента()

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДоговора(Договор)
	
	Возврат Новый Структура(""НомерДоговора,ДатаДоговора"",Договор.Номер,Договор.Дата);
	
КонецФункции // ПолучитьНаименованиеКонтрагента()

&НаСервереБезКонтекста
Функция ЭтоЮрЛицо(Контрагент)
	
	Если Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда	
		Возврат Истина;
	Иначе
		Возврат Ложь;	
	КонецЕсли;
	
КонецФункции // ЭтоЮрЛицо()

&НаСервереБезКонтекста
// Функция возвращает фамилию, имя и отчество в нужном падеже
//
// ФИО - строка формата Фамилия Имя Отчество (через пробел), можно опускать Имя и/или Отчество
// Падеж - название падежа (хоть первая буква) или его № 1-6
// ТолькоИнициалы - если истина, то будут только первые буквы вида Фамилия И.О.
//
// Яков и Софья Коган, 2003-2007 (с)
//
Функция ПадежФИО(Знач ФИО, Падеж=1, ТолькоИнициалы=Ложь) Экспорт
	
	Если ФИО = Неопределено Тогда
		Возврат """";
	КонецЕсли;
	
	// Сорокин - 11.04.2019 - начало
	ФИО = СокрЛП(ФИО);
	// Сорокин - 11.04.2019 - конец
	
	Если ТипЗнч(ФИО)<>Тип(""Строка"") Тогда
		Сообщить(""Неверная строка передана """"падежу ФИО!"""": "" + СокрЛП(ФИО)); Возврат ФИО;
	КонецЕсли;
	
	// уберем множественные пробелы
	Пока 1=1 Цикл
		ФИО=СокрЛП(СтрЗаменить(ФИО,""  "","" ""));
		Если Найти(ФИО,""  "")=0 Тогда Прервать КонецЕсли;
	КонецЦикла;
	
	// вернем, если сам именительный
	Если (Лев(Падеж,1)=""И"") или (Падеж=1) Тогда 
		Если ТолькоИнициалы Тогда
			Фамилия="""";
			Для й=1 По СтрДлина(ФИО) Цикл
				символс=Сред(ФИО,й,1);
				Если символс="" "" Тогда Прервать КонецЕсли;
				Фамилия=Фамилия+символс;
			КонецЦикла;
			ы=й+1; // перешли пробел
			Имя="""";
			Для й=ы По СтрДлина(ФИО) Цикл
				символс=Сред(ФИО,й,1);
				Если символс="" "" Тогда Прервать КонецЕсли;
				Имя=Имя+символс;
			КонецЦикла;
			ы=й+1; // перешли второй пробел
			Отчество="""";
			Для й=ы По СтрДлина(ФИО) Цикл
				символс=Сред(ФИО,й,1);
				Если символс="" "" Тогда Прервать КонецЕсли;
				Отчество=Отчество+символс;
			КонецЦикла;
			
			
			новИмя=?(ПустаяСтрока(Имя),"""",Лев(Имя,1)+""."");
			новОтчество =?(ПустаяСтрока(Отчество),"""",Лев(Отчество,1)+""."");
			
			// и теперь всё вместе	
			новФИО=Фамилия+"" ""+новИмя+"" ""+новОтчество;
			Возврат новФИО;	
			
		Иначе	
			Возврат ФИО;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(Падеж)=Тип(""Строка"") Тогда
		пад=СокрЛП(НРег(Лев(Падеж,1))); 
		Если Найти(""рдвтп"",пад)=0 Тогда
			Сообщить(""Неверный падеж передан """"падежу ФИО""""!""); Возврат ФИО;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Падеж)=Тип(""Число"") Тогда
		Если (Падеж<1) или (Падеж>6) Тогда
			Сообщить(""Неверный падеж передан """"падежу ФИО""""!""); Возврат ФИО;
		КонецЕсли;			
		пад=Падеж-1;
	КонецЕсли;
	
	ФИО=СокрЛП(НРег(ФИО)); // так удобнее
	
	// свой анализатор состава
	Фамилия="""";
	Для й=1 По СтрДлина(ФИО) Цикл
		символс=Сред(ФИО,й,1);
		Если символс="" "" Тогда Прервать КонецЕсли;
		Фамилия=Фамилия+символс;
	КонецЦикла;
	ы=й+1; // перешли пробел
	Имя="""";
	Для й=ы По СтрДлина(ФИО) Цикл
		символс=Сред(ФИО,й,1);
		Если символс="" "" Тогда Прервать КонецЕсли;
		Имя=Имя+символс;
	КонецЦикла;
	ы=й+1; // перешли второй пробел
	Отчество="""";
	Для й=ы По СтрДлина(ФИО) Цикл
		символс=Сред(ФИО,й,1);
		Если символс="" "" Тогда Прервать КонецЕсли;
		Отчество=Отчество+символс;
	КонецЦикла;
	
	// теперь имеем раздельно Фамилию, Имя и Отчество.	
	// начинается собственно блок анализа содержания и падежей
	
	// проанализируем пол М/Ж
	Если Прав(Отчество,1)=""а"" Тогда Пол=""Ж"" Иначе Пол=""М"" КонецЕсли;
	
	// создадим структуру таблицы, хранящей окончания слов
	ток=Новый ТаблицаЗначений;
	ТипСтроки=Новый ОписаниеТипов(""Строка"",Новый КвалификаторыСтроки(2));
	ТипЧисла=Новый ОписаниеТипов(""Число"",Новый КвалификаторыЧисла(1,0));
	ток.Колонки.Добавить(""СтарОк"",ТипСтроки); // старое окончание 2 символа
	// колонки, хранящие новые окончания слов
	ток.Колонки.Добавить(""р""); // родительный
	ток.Колонки.Добавить(""д""); // дательный
	ток.Колонки.Добавить(""в""); // винительный
	ток.Колонки.Добавить(""т""); // творительный
	ток.Колонки.Добавить(""п""); // предложный
	// для указания, сколько букв с конца слова отсечь,
	ток.Колонки.Добавить(""КолвоСрез"",ТипЧисла); // кол-во срезаемых букв
	
	Гласные=""аеэоуиыяюьъ""; // список гласных букв в виде строки
	
	// ======== обработаем фамилию ==========
	// заполним таблицу данными для фамилии
	
	Если пол=""М"" Тогда
		строток=ток.Добавить(); // иванов
		строток.СтарОк=""*s"";
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ым""; строток.п=""е"";
		строток.КолвоСрез=0;
		
		строток=ток.Добавить(); // красинский
		строток.СтарОк=""*й""; 
		строток.р=""ого""; строток.д=""ому""; строток.в=""ого""; строток.т=""им""; строток.п=""ом"";
		строток.КолвоСрез=2;		
		
		строток=ток.Добавить(); // белый
		строток.СтарОк=""ый"";
		строток.р=""ого""; строток.д=""ому""; строток.в=""ого""; строток.т=""ым""; строток.п=""ом"";
		строток.КолвоСрез=2;
		
		строток=ток.Добавить(); // палей
		строток.СтарОк=""*й"";
		строток.р=""я""; строток.д=""ю""; строток.в=""я""; строток.т=""ем""; строток.п=""е"";
		строток.КолвоСрез=1;
		
		строток=ток.Добавить(); // рабинович
		строток.СтарОк=""*ч"";
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ем""; строток.п=""е"";
		строток.КолвоСрез=0;
		
		строток=ток.Добавить(); // починок, зализняк
		строток.СтарОк=""*к"";
		строток.р=""ка""; строток.д=""ку""; строток.в=""ка""; строток.т=""ком""; строток.п=""ке"";
		строток.КолвоСрез=2;
		
		строток=ток.Добавить(); // шинкарь
		строток.СтарОк=""*ь"";
		строток.р=""я""; строток.д=""ю""; строток.в=""я""; строток.т=""ем""; строток.п=""е"";
		строток.КолвоСрез=1;
		
		строток=ток.Добавить(); // перельман, оганесян
		строток.СтарОк=""*н"";
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ом""; строток.п=""е"";
		строток.КолвоСрез=0;
		
		строток=ток.Добавить(); // баранкин
		строток.СтарОк=""ин"";
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ым""; строток.п=""е"";
		строток.КолвоСрез=0;
		
	ИначеЕсли Пол=""Ж"" Тогда		
		строток=ток.Добавить(); // склодовская
		строток.СтарОк=""ая"";
		строток.р=""ой""; строток.д=""ой""; строток.в=""ую""; строток.т=""ой""; строток.п=""ой"";
		строток.КолвоСрез=2;
		
		строток=ток.Добавить(); // иванова
		строток.СтарОк=""*а""; 
		строток.р=""ой""; строток.д=""ой""; строток.в=""у""; строток.т=""ой""; строток.п=""ой"";
		строток.КолвоСрез=1;
	КонецЕсли;
	
	// таблица заполнена. считаем 2 последних буквы и поищем их
	Если не ПустаяСтрока(Фамилия) Тогда
		пб=Прав(Фамилия,2); кол=""СтарОк""; // ищем по ней
		новФамилия=Фамилия; // если ничего не изменится, так и будет
		стро=ток.Найти(пб,кол);
		Если стро<>Неопределено Тогда // нашли строгое сразу
			Основа=Лев(Фамилия,СтрДлина(Фамилия)-стро.КолвоСрез);
			новФамилия=Основа+СокрЛП(стро[пад]);
		Иначе // строго не нашли, ищем только по последней
			пб=""*""+Прав(пб,1); 
			стро=ток.Найти(пб,кол);
			Если стро<>Неопределено Тогда // нашли по последней
				Основа=Лев(Фамилия,СтрДлина(Фамилия)-стро.КолвоСрез);
				новФамилия=Основа+СокрЛП(стро[пад]);
			Иначе // по последней не нашли, ищем по виду буквы
				пб=""*""+?(Найти(Гласные,Прав(пб,1))=0,""s"",""g"");
				стро=ток.Найти(пб,кол);
				Если стро<>Неопределено Тогда // нашли по виду
					Основа=Лев(Фамилия,СтрДлина(Фамилия)-стро.КолвоСрез);
					новФамилия=Основа+СокрЛП(стро[пад]);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		новФамилия="""";
	КонецЕсли;
	
	// ======== обработаем имя ==========
	// заполним таблицу данными для имени
	ток.Очистить();
	
	Если Пол=""М"" Тогда
		// обработаем исключения
		Если Имя=""лев"" Тогда Имя=""льв"" КонецЕсли;
		Если Имя=""павел"" Тогда Имя=""павл"" КонецЕсли;
		
		строток=ток.Добавить(); // сергей
		строток.старок=""*й"";
		строток.р=""я""; строток.д=""ю""; строток.в=""я""; строток.т=""ем""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // иван + лев + павел
		строток.старок=""*s"";
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ом""; строток.п=""е"";
		строток.колвосрез=0;
		
		строток=ток.Добавить(); // никита
		строток.старок=""*а"";
		строток.р=""ы""; строток.д=""е""; строток.в=""у""; строток.т=""ой""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // лука
		строток.старок=""ка"";
		строток.р=""и""; строток.д=""е""; строток.в=""у""; строток.т=""ой""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // иеремия
		строток.старок=""ия"";
		строток.р=""и""; строток.д=""и""; строток.в=""ю""; строток.т=""ей""; строток.п=""и"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // илья
		строток.старок=""*я"";
		строток.р=""и""; строток.д=""е""; строток.в=""ю""; строток.т=""ей""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // игорь
		строток.старок=""*ь"";
		строток.р=""я""; строток.д=""ю""; строток.в=""я""; строток.т=""ем""; строток.п=""е"";
		строток.колвосрез=1;
		
	ИначеЕсли Пол=""Ж"" Тогда
		// обработаем исключения
		//Если Имя=""ольга"" Тогда Имя=""ольгь"" КонецЕсли;
		
		строток=ток.Добавить(); // ирина
		строток.старок=""*а"";
		строток.р=""ы""; строток.д=""е""; строток.в=""у""; строток.т=""ой""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // инга, ольга
		строток.старок=""га"";
		строток.р=""и""; строток.д=""е""; строток.в=""у""; строток.т=""ой""; строток.п=""е"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // эсфирь
		строток.старок=""*ь"";
		строток.р=""и""; строток.д=""и""; строток.в=""ь""; строток.т=""ью""; строток.п=""и"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // мария
		строток.старок=""ия"";
		строток.р=""и""; строток.д=""и""; строток.в=""ю""; строток.т=""ей""; строток.п=""и"";
		строток.колвосрез=1;
		
		строток=ток.Добавить(); // софья
		строток.старок=""*я"";
		строток.р=""и""; строток.д=""е""; строток.в=""ю""; строток.т=""ей""; строток.п=""е"";
		строток.колвосрез=1;
	КонецЕсли;
	
	// таблица заполнена. считаем 2 последних буквы и поищем их
	Если не ПустаяСтрока(Имя) Тогда
		пб=Прав(Имя,2); кол=""СтарОк""; // ищем по ней
		новИмя=Имя; // если ничего не изменится, так и будет
		стро=ток.Найти(пб,кол);
		Если стро<>Неопределено Тогда // нашли строгое сразу
			Основа=Лев(Имя,СтрДлина(Имя)-стро.КолвоСрез);
			новИмя=Основа+СокрЛП(стро[пад]);
		Иначе // строго не нашли, ищем только по последней
			пб=""*""+Прав(пб,1); 
			стро=ток.Найти(пб,кол);
			Если стро<>Неопределено Тогда // нашли по последней
				Основа=Лев(Имя,СтрДлина(Имя)-стро.КолвоСрез);
				новИмя=Основа+СокрЛП(стро[пад]);
			Иначе // по последней не нашли, ищем по виду буквы
				пб=""*""+?(Найти(Гласные,Прав(пб,1))=0,""s"",""g"");
				стро=ток.Найти(пб,кол);
				Если стро<>Неопределено=1 Тогда // нашли по виду
					Основа=Лев(Имя,СтрДлина(Имя)-стро.КолвоСрез);
					новИмя=Основа+СокрЛП(стро[пад]);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		новИмя="""";
	КонецЕсли;
	
	// ======== обработаем отчество, тут проще ==========
	ток.Очистить();
	
	Если Пол=""М"" Тогда
		строток=ток.Добавить();
		строток.р=""а""; строток.д=""у""; строток.в=""а""; строток.т=""ем""; строток.п=""е"";
		строток.колвосрез=0;
	ИначеЕсли Пол=""Ж"" Тогда
		строток=ток.Добавить();
		строток.р=""ы""; строток.д=""е""; строток.в=""у""; строток.т=""ой""; строток.п=""е"";
		строток.колвосрез=1;
	КонецЕсли;
	Если не ПустаяСтрока(Отчество) Тогда
		Основа=Лев(Отчество,СтрДлина(Отчество)-ток[0].КолвоСрез);	
		новОтчество=Основа+СокрЛП(ток[0][пад]);
	Иначе
		новОтчество="""";
	КонецЕсли;	
	
	Если ТолькоИнициалы Тогда
		новИмя=?(ПустаяСтрока(новИмя),"""",Лев(новИмя,1)+""."");
		новОтчество =?(ПустаяСтрока(новОтчество),"""",Лев(новОтчество,1)+""."");
	КонецЕсли;
	
	// установим первые буквы верхним регистром
	новФамилия=ВРег(Лев(новФамилия,1))+Сред(новФамилия,2);
	новИмя=ВРег(Лев(новИмя,1))+Сред(новИмя,2);
	новОтчество=ВРег(Лев(новОтчество,1))+Сред(новОтчество,2);
	
	// и теперь всё вместе	
	новФИО=новФамилия+"" ""+новИмя+"" ""+новОтчество;
	Возврат новФИО;
КонецФункции

&НаСервереБезКонтекста
// функция возвращает список запрещенных символов в именах файлов
// Возвращаемое значение:
//   Список значений в котором хранится список всех запрещенных символов в именах файлов.
//
Функция ПолучитьСписокЗапрещенныхСимволовВИменахФайлов()
	
	СписокСимволов = Новый СписокЗначений();
	
	СписокСимволов.Добавить(""\"");
	СписокСимволов.Добавить(""/"");
	СписокСимволов.Добавить("":"");
	СписокСимволов.Добавить(""*"");
	СписокСимволов.Добавить(""&"");
	СписокСимволов.Добавить("""""""");
	СписокСимволов.Добавить(""<"");
	СписокСимволов.Добавить("">"");
	СписокСимволов.Добавить(""|"");
	
	Возврат СписокСимволов;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоНазначенномуОбъекту()
	
	Если Параметры.ОбъектыНазначения = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	СсылкаОснования = Параметры.ОбъектыНазначения[0];
		 
	Если ПолучитьТип(СсылкаОснования) = ""Документ"" Тогда
		 
		СтруктураРеквизитов = ПолучитьСтруктуруРеквизитовДокумента(СсылкаОснования);
		ЗаполнитьЗначенияСвойств(Объект,СтруктураРеквизитов);
		
	ИначеЕсли ПолучитьТип(СсылкаОснования) = ""Справочник""	Тогда
		
		Если ТипЗнч(СсылкаОснования) = Тип(""СправочникСсылка.Контрагенты"") Тогда
			Объект.Контрагент = СсылкаОснования;
			Объект.ДоговорКонтрагента = ПолучитьРеквизит(Объект.Контрагент,""ОсновнойДоговорКонтрагента"");
			Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
				Объект.Организация =  ПолучитьРеквизит(Объект.ДоговорКонтрагента,""Организация"");
			КонецЕсли;
		ИначеЕсли ТипЗнч(СсылкаОснования) = Тип(""СправочникСсылка.ДоговорыКонтрагентов"") Тогда
			Объект.Контрагент = ПолучитьРеквизит(СсылкаОснования,""Владелец"");
			Объект.ДоговорКонтрагента = СсылкаОснования;
			Объект.Организация = ПолучитьРеквизит(СсылкаОснования,""Организация"");
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ""К данному справочнику подключение печати по шаблону Word не предусмотрено!"";
			Сообщение.Сообщить(); 
		КонецЕсли;

	КонецЕсли;
	
	
КонецПроцедуры // ЗаполнитьПоНазначенномуОбъекту()

&НаСервереБезКонтекста
Функция ПолучитьТип(Параметр)
	
	Если Метаданные.Документы.Найти(Параметр.Метаданные().Имя) <> Неопределено Тогда
		Возврат ""Документ"";	
	ИначеЕсли	Метаданные.Справочники.Найти(Параметр.Метаданные().Имя) <> Неопределено Тогда		
		Возврат ""Справочник"";
	Иначе
		Возврат ""Неопределено"";		
	КонецЕсли;
	
КонецФункции // ЭтоДокумент()

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруРеквизитовДокумента(СсылкаНаОбъект)
	
	//СсылкаНаОбъект = Документы.РасходнаяНакладная.НайтиПоНомеру(""ТД-00000002"",Дата(2010,1,12));
	СтруктураРеквизитов = Новый Структура;
	Если СсылкаНаОбъект.Метаданные().Реквизиты.Найти(""Организация"") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить(""Организация"",СсылкаНаОбъект.Организация);
	Иначе
		СтруктураРеквизитов.Вставить(""Организация"",Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	Если СсылкаНаОбъект.Метаданные().Реквизиты.Найти(""Контрагент"") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить(""Контрагент"",СсылкаНаОбъект.Контрагент);
	Иначе
		СтруктураРеквизитов.Вставить(""Контрагент"",Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
	Если СсылкаНаОбъект.Метаданные().Реквизиты.Найти(""Договор"") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить(""ДоговорКонтрагента"",СсылкаНаОбъект.Договор);
	Иначе
		СтруктураРеквизитов.Вставить(""ДоговорКонтрагента"",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
    Возврат СтруктураРеквизитов;
	
КонецФункции // ЕстьРеквизит()

&НаСервере
Функция ДобавитьВМассивСправочник(МассивТипов, ТипСтрокой)
	
	Если Метаданные.Справочники.Найти(ТипСтрокой) <> Неопределено Тогда
		МассивТипов.Добавить(Тип(""СправочникСсылка."" + ТипСтрокой));
	КонецЕсли;
	
КонецФункции

#КонецОбласти
",
{4,2,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1a7cf251-ee90-4b1d-b055-ec951e637ace}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,8,
{1,
{0,2d59ac07-9a0b-43c2-a434-03053df65a6a}
},
{1,
{0,46e1d41d-7d1c-4214-bf08-275c15611281}
},
{1,
{0,7cb6ebe5-fd26-40cc-8ed8-e5eac7ffcdda}
},
{1,
{0,7eea21ea-1f9d-4340-b5e1-8cda77910c58}
},
{1,
{0,c44b46c5-9d1f-45bf-bc38-40cfd16a50cd}
},
{1,
{0,ca858d67-78fd-4fbc-a39c-332eacf75dd7}
},
{1,
{0,e15a07af-4ad0-44cc-8bbf-742cffc72dd8}
},
{1,
{0,fcc9536d-a368-4197-9000-3149c69b732d}
}
},1,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"Контрагент",
{1,1,
{"ru","Контрагент"}
},
{"Pattern",
{"#",77cb1448-7b83-44c4-bbf7-e724077c459b}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,1,
{0,"ОбъектыНазначения",
{"Pattern"},1}
},
{0,5,
{9,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СправкаПоПараметрам",
{1,1,
{"ru","Параметры"}
},
{1,1,
{"ru","Справка по параметрам"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СправкаПоПараметрам",2,0,0,
{0,0},1,0,1,0,0,1},
{9,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОбновитьЗамены",
{1,1,
{"ru","Обновить параметры замены"}
},
{1,1,
{"ru","Обновить замены"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0,""},"ОбновитьЗамены",2,0,0,
{0,0},1,0,1,0,0,1},
{9,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СоздатьДоговор",
{1,1,
{"ru","Создать договор"}
},
{1,1,
{"ru","Создать договор в справочнике Файлы"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СформироватьДоговорИОткрыть",2,0,0,
{0,0},1,0,1,0,0,1},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СформироватьДоговорИОткрыть",
{1,1,
{"ru","Сформировать"}
},
{1,1,
{"ru","Сформировать договор и открыть"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,832fa9d3-deab-4c57-b6e2-dee5d24d6100},"",-1,-1,1,0,""},"СформироватьДоговорИОткрыть",2,0,0,
{0,0},1,0,1,0,0,1},
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьОбразецDocШаблона",
{1,1,
{"ru","Сохранить образец doc-шаблона"}
},
{1,1,
{"ru","Сохранить образец doc шаблона"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,818ab7d0-4654-4542-bd5e-fd9d1352b5a1},"",-1,-1,1,0,""},"СохранитьОбразецDocШаблона",3,0,0,
{0,0},1,0,1,0,0,1}
},
{0,0},
{0,0},0,0}