
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации=Новый Структура;
	МассивНазначений=Новый Массив;
	МассивНазначений.Добавить("Справочник.Контрагенты");
	Если Метаданные().ПолноеИмя() = "УправлениеТорговлей" Тогда
		МассивНазначений.Добавить("Справочник.Партнеры");
	КонецЕсли;
	МассивНазначений.Добавить("Справочник.ДоговорыКонтрагентов");
	МассивНазначений.Добавить("Документ.СчетНаОплатуКлиенту");
	МассивНазначений.Добавить("Документ.ЗаказКлиента");
	
	ПараметрыРегистрации.Вставить("Вид"				,"ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение"		,МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование"	,"Формирование договора по шаблону Word");
	ПараметрыРегистрации.Вставить("Версия"			,"1.8");
	ПараметрыРегистрации.Вставить("БезопасныйРежим"	,Ложь);
	ПараметрыРегистрации.Вставить("Информация"		,"Печатная форма для формирования документа Word по шаблону");
	
	ТаблицаКоманд=ПолучитьТаблицуКоманд();
		
	ДобавитьКоманду(ТаблицаКоманд,
		"Создание договора по шаблону Word",
		"Форма",
		"ОткрытиеФормы",
		Ложь,
	);


	ПараметрыРегистрации.Вставить("Команды",ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;

КонецФункции

Функция ПолучитьТаблицуКоманд()
	
  Команды = Новый ТаблицаЗначений;
  Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
  Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
  Возврат Команды;
  
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
